When would you want to create a remote repository rather than keeping all your work local ?

      Creating a remote repository for backup and collaboration.

Why might you want to always pull changes manually
rather than having Git automatically stay up-to-date with your remote repository?

      There might be nothing to change to make the pull.
      We might want to keep the original work locally and push changes
      to the remote. Doing the inverse automatically might damage what
      we are working on currently.

Describe the differences between forks, clones, and branches. When would you use one instead of another?

      forks : used to copy from a remote to another GitHub remote.
      clone : used to do a copy from local/remote repository to a local repository.
      branches : used to copy the actual work to experiment new things to the main developed or written files.

What is the benefit of having a copy of the last known state of the remote stored locally?

      So that we manipulate the closest version that other collaborators are using.
      This would allow less merging, and the differences are spotted quicker
      than using an old version of the remote.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

      I think that mostly everything is hard.
      Without Git you can't keep track of the changes in the files.
      Without GitHub you can't see the changes introduced by another collaborator
      without going and checking manually all the changes.
      Merging could be harder.

When would you want to make changes in a separate branch rather than directly in master? 
What benefits does each approach have?

      When wanting to experiment and add new features.
      If want we want to keep the master branch working and develop other versions.
